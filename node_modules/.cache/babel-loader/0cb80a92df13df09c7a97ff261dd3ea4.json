{"ast":null,"code":"/*\r\nimport { fetchProfile } from './fetchProfile';\r\nimport { space, schema } from 'rdf-namespaces';\r\nimport { createDocument } from 'tripledoc';\r\nimport { fetchPublicTypeIndex } from './fetchPublicTypeIndex';\r\nimport { addToTypeIndex } from './addToTypeIndex';\r\n\r\nexport async function initialiseNotesList () {\r\n  const [profile, publicTypeIndex] = await Promise.all([fetchProfile(), fetchPublicTypeIndex()]);\r\n  if (profile === null || publicTypeIndex === null) {\r\n    return null;\r\n  }\r\n\r\n  const storage = profile.getRef(space.storage);\r\n  if (typeof storage !== 'string') {\r\n    return null;\r\n  }\r\n\r\n  // Note: There's an assumption here that `/public/` exists and is writable for this app.\r\n  //       In the future, \"Shapes\" should hopefully allow us to get more guarantees about this:\r\n  //       https://ruben.verborgh.org/blog/2019/06/17/shaping-linked-data-apps/#need-for-shapes\r\n  const notesListRef = storage + 'public/notes.ttl';\r\n  const notesList = createDocument(notesListRef);\r\n  await notesList.save();\r\n  await addToTypeIndex(publicTypeIndex, notesList, schema.TextDigitalDocument);\r\n  return notesList;\r\n}\r\n*/","map":{"version":3,"sources":["C:\\Users\\admin\\Documents\\GitHub\\shoutbox\\src\\services\\initialiseNotesList.ts"],"names":[],"mappings":"AAAA","sourcesContent":["/*\r\nimport { fetchProfile } from './fetchProfile';\r\nimport { space, schema } from 'rdf-namespaces';\r\nimport { createDocument } from 'tripledoc';\r\nimport { fetchPublicTypeIndex } from './fetchPublicTypeIndex';\r\nimport { addToTypeIndex } from './addToTypeIndex';\r\n\r\nexport async function initialiseNotesList () {\r\n  const [profile, publicTypeIndex] = await Promise.all([fetchProfile(), fetchPublicTypeIndex()]);\r\n  if (profile === null || publicTypeIndex === null) {\r\n    return null;\r\n  }\r\n\r\n  const storage = profile.getRef(space.storage);\r\n  if (typeof storage !== 'string') {\r\n    return null;\r\n  }\r\n\r\n  // Note: There's an assumption here that `/public/` exists and is writable for this app.\r\n  //       In the future, \"Shapes\" should hopefully allow us to get more guarantees about this:\r\n  //       https://ruben.verborgh.org/blog/2019/06/17/shaping-linked-data-apps/#need-for-shapes\r\n  const notesListRef = storage + 'public/notes.ttl';\r\n  const notesList = createDocument(notesListRef);\r\n  await notesList.save();\r\n  await addToTypeIndex(publicTypeIndex, notesList, schema.TextDigitalDocument);\r\n  return notesList;\r\n}\r\n*/"]},"metadata":{},"sourceType":"module"}